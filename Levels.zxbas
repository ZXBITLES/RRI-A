dim cutscene as ubyte = 0
dim gameDifficulty as ubyte = 1
dim keyLeft as uinteger
dim keyRight as uinteger
dim keyUp as uinteger
dim keyDown as uinteger
dim keyFire as uinteger
dim map(20,31) as ubyte

dim localMapNumber as ubyte

dim AlienX as ubyte
dim AlienY as ubyte
dim AlienLocation as ubyte
dim AlienFrame as ubyte
dim AlienAction as ubyte
dim AlienHP as ubyte
dim AlienDead as ubyte

const AlienActionEmpty as ubyte = 0
const AlienActionUp as ubyte = 1
const AlienActionDown as ubyte = 2
const AlienActionLeft as ubyte = 3
const AlienActionRight as ubyte = 4
const AlienActionFireLeft as ubyte = 5
const AlienActionFireRight as ubyte = 6

const AlienLocationUp as ubyte = 0
const AlienLocationDown as ubyte = 1

dim AlienLastOrientation as ubyte = 0

dim mitosisactive as ubyte = 0
dim spittingactive as ubyte = 0
dim symbiosisactive as ubyte = 0
dim cloneX as ubyte
dim cloneY as ubyte
dim cloneLocation as ubyte
dim cloneHP as ubyte

dim brain as ubyte = 0
dim mitosis as ubyte = 0
dim symbiosis as ubyte = 0
dim spit as ubyte = 0
dim selector as ubyte = 0
dim showselector as ubyte = 0

dim achSFS as ubyte = 0 ' Achievement Strike From Sky
dim achBB as ubyte = 0 ' Achievement Burn Baby!
dim achTL as ubyte = 0 'Take the loot

dim vector(3719) as ubyte => {32,11,24,11,169,170,169,170,169,170,169,111,6,11,169,170,171,172,169,170,171,172,169,170,160,7,11,171,172,4,11,171,111,4,11,169,170,171,172,169,170,5,11,172,160,3,11,2,0,171,172,169,170,4,11,169,111,100,110,197,4,0,110,6,0,169,170,160,2,11,3,0,8,11,171,111,100,110,3,0,102,100,110,6,0,171,172,160,2,11,6,0,5,11,169,111,11,1,106,2,0,169,170,3,11,9,0,2,11,171,111,3,11,160,7,0,106,2,0,4,11,10,0,2,11,169,111,3,11,160,7,0,106,2,0,111,5,0,6,11,106,158,159,111,171,111,4,11,2,0,198,3,0,5,11,11,0,106,100,160,111,169,111,5,11,5,0,3,11,3,0,118,2,0,3,67,2,0,198,100,106,100,160,111,171,111,5,11,4,1,106,100,2,11,100,107,100,119,2,0,3,68,4,0,106,100,160,111,169,222,160,7,0,106,100,2,11,2,58,11,1,106,100,160,111,171,222,160,7,0,106,2,0,111,2,17,11,11,106,100,160,111,169,111,9,11,106,2,0,14,11,3,17,111,171,111,3,11,4,0,3,11,106,3,0,111,5,0,160,171,172,169,6,11,169,111,2,11,2,0,163,164,2,0,111,100,106,7,0,198,100,160,169,170,171,172,5,11,171,111,100,110,118,100,165,166,2,0,110,100,106,9,0,3,11,169,170,5,11,169,111,199,110,119,5,0,110,100,106,9,1,3,11,172,171,172,171,172,171,172,171,111,32,11,32,11,255,32,11,2,11,171,169,171,169,9,0,3,11,169,170,171,172,6,11,171,172,171,111,2,11,169,3,11,10,0,2,11,171,172,169,170,3,11,170,169,170,169,111,169,111,2,11,107,2,11,157,106,7,1,106,158,2,11,169,2,11,106,3,11,172,4,11,171,111,2,11,169,2,11,160,106,7,0,106,100,110,100,171,111,160,106,7,0,111,169,111,2,11,171,2,11,160,106,100,118,100,118,198,118,100,106,100,110,100,169,111,160,106,100,198,3,0,2,67,111,171,111,2,11,169,2,11,160,106,100,119,100,119,100,119,100,106,100,110,100,171,111,160,106,5,0,2,68,111,169,111,2,11,171,2,11,101,106,10,1,106,2,11,9,1,111,171,111,2,11,169,3,11,106,10,11,106,12,11,169,111,2,11,171,3,11,106,10,11,106,3,0,3,11,2,0,4,11,171,111,2,11,169,172,169,170,106,171,172,169,170,6,11,106,6,0,118,100,111,172,169,170,169,111,2,11,171,170,107,172,106,169,170,171,172,169,170,169,3,11,106,6,0,119,100,111,170,4,11,2,11,169,111,169,111,106,171,172,169,170,171,172,107,3,11,9,1,111,170,4,11,2,11,171,111,171,111,106,2,11,171,172,169,20,11,2,11,169,111,169,111,106,7,11,4,0,6,11,169,170,169,170,169,170,169,111,2,11,171,170,171,160,106,160,2,0,2,11,3,0,163,164,2,0,5,11,171,4,11,172,171,111,4,11,169,160,106,160,100,118,110,2,0,198,100,165,166,198,2,0,106,2,11,4,58,111,4,58,111,4,0,160,106,160,100,119,110,9,0,106,2,11,100,198,100,118,110,3,0,197,111,4,17,15,1,106,2,11,3,0,119,110,4,0,20,11,106,2,11,9,1,20,11,199,11,11,255,20,11,197,11,11,111,172,169,170,171,172,169,170,12,11,106,2,11,169,170,172,6,11,111,170,4,11,10,0,111,3,0,106,2,11,107,172,169,170,171,172,169,2,11,111,172,4,11,4,0,198,5,0,110,118,2,0,106,4,11,171,172,2,11,107,2,11,111,107,169,170,171,2,11,8,0,107,110,119,2,0,106,2,11,100,106,3,0,4,11,4,11,169,2,11,158,4,1,4,58,5,1,2,11,100,106,4,0,171,172,111,4,11,171,2,11,3,0,2,11,4,17,7,11,101,106,4,1,111,170,222,171,169,171,169,111,5,0,6,11,5,0,2,11,106,5,11,172,222,169,4,11,5,0,111,160,10,0,111,106,5,11,170,222,171,4,11,5,17,111,160,100,198,2,0,2,67,4,0,160,106,160,4,11,172,222,169,10,11,160,4,0,2,68,4,0,160,106,160,2,11,169,172,170,222,171,172,169,170,171,172,169,170,171,172,169,172,11,1,2,17,2,11,171,3,11,3,11,5,17,20,11,169,3,11,9,11,169,170,171,172,169,170,171,172,169,170,172,169,171,6,11,171,172,169,111,9,11,171,11,11,169,170,171,172,169,4,11,171,111,3,11,170,171,172,169,170,172,169,111,7,0,7,11,171,172,3,11,169,111,2,11,171,172,7,11,2,0,163,164,4,0,3,11,169,3,11,160,4,0,111,2,11,6,0,4,11,100,165,166,100,198,2,0,107,170,2,71,172,2,0,160,198,3,0,111,2,11,3,0,198,100,118,110,169,111,172,5,0,5,11,169,170,2,0,160,4,0,111,2,11,5,0,119,110,171,172,170,3,11,158,6,11,4,17,5,1,111,2,11,8,1,5,11,199,16,11,255,15,11,197,16,11,111,169,170,171,172,10,11,100,111,172,169,170,171,11,11,111,171,2,11,6,0,5,11,100,111,170,2,11,169,9,0,111,100,111,169,2,11,2,0,198,100,118,100,171,172,3,11,100,111,172,3,11,2,0,167,100,198,2,0,118,100,110,100,111,171,2,11,4,0,119,100,111,170,3,11,100,111,170,169,2,11,2,0,168,4,0,119,100,110,100,111,169,2,11,6,1,111,172,3,11,100,111,170,171,172,111,5,1,106,5,1,111,171,9,11,107,3,11,100,3,11,170,6,11,106,5,11,111,8,0,2,11,172,2,11,3,0,2,11,172,171,169,4,11,106,5,11,111,2,0,163,164,100,118,198,2,0,111,170,2,11,3,0,3,11,169,171,111,2,0,111,106,111,3,0,222,2,0,165,166,100,119,3,0,111,172,111,160,3,0,160,3,11,169,111,118,2,0,106,2,0,118,100,222,101,4,17,3,1,106,111,170,171,160,3,0,160,3,11,171,111,119,2,0,106,2,0,119,100,111,9,11,106,3,11,160,3,0,160,100,2,11,169,111,3,1,106,4,1,222,107,169,171,172,169,170,2,11,106,3,0,160,3,0,160,4,0,4,11,106,5,11,111,171,2,11,170,171,172,169,111,106,3,0,160,3,0,160,2,67,2,0,4,11,106,111,100,107,2,11,111,169,170,171,172,2,11,171,111,106,3,0,160,100,107,100,160,2,68,2,0,4,11,106,3,0,2,11,3,11,169,3,11,169,111,5,1,3,58,5,1,111,169,2,11,106,4,0,111,3,11,171,3,11,171,4,11,7,0,4,11,171,2,10,106,2,11,2,58,111,2,11,3,0,111,107,169,170,171,172,111,7,17,111,170,171,172,169,2,10,106,111,3,0,111,100,110,118,198,100,5,11,170,9,11,172,7,11,3,0,111,199,110,119,2,0,5,11,172,169,170,171,172,169,170,171,172,169,170,7,11,3,0,111,28,11,3,17,111,255,32,11,7,11,7,0,7,11,4,0,111,5,0,111,4,11,8,0,5,11,8,0,110,5,0,111,2,11,6,0,163,164,100,4,11,5,0,198,4,0,110,2,0,107,2,0,111,100,110,100,198,100,2,67,100,165,166,100,2,11,9,0,106,7,1,106,111,199,110,3,0,2,68,3,0,2,11,160,100,118,100,106,6,1,7,11,106,111,9,1,106,2,11,160,100,119,100,106,8,11,3,0,2,11,106,111,3,11,6,0,106,2,11,171,4,1,111,171,172,169,170,171,6,0,111,106,111,3,11,6,0,106,2,11,169,5,11,169,4,11,4,0,198,2,0,106,111,3,11,106,6,1,2,11,171,111,100,118,5,0,2,11,7,0,106,111,2,11,100,106,5,0,3,11,169,111,100,119,100,107,4,0,111,8,1,111,2,11,100,106,6,0,2,11,171,111,2,1,106,2,1,3,0,10,11,3,11,3,1,106,111,3,0,160,169,111,2,0,106,4,0,3,11,7,0,111,6,11,106,2,11,2,0,160,171,111,100,198,106,2,0,198,100,110,7,0,2,67,111,6,11,106,5,11,169,111,2,0,106,4,0,110,3,0,107,3,0,2,68,111,2,11,4,0,106,2,0,3,11,171,111,9,1,106,7,1,111,100,110,100,118,2,0,106,2,0,110,171,111,169,10,11,106,8,11,100,110,100,119,2,0,106,2,0,110,169,111,171,172,169,107,171,172,169,170,171,111,100,106,4,0,110,2,0,111,10,1,171,111,169,7,11,169,111,100,106,100,198,100,118,110,2,0,197,10,11,169,170,171,172,169,170,171,107,169,170,171,111,100,106,3,0,119,110,107,2,0,14,11,5,17,3,11,10,1,255,32,11,6,11,171,172,169,170,171,21,11,6,11,169,3,11,169,7,11,6,0,8,11,2,11,6,0,111,5,0,111,5,0,163,164,7,0,111,2,0,2,11,100,198,4,0,111,167,4,0,110,5,0,165,166,3,0,198,100,118,100,110,100,197,2,11,6,0,111,168,2,0,103,100,110,100,103,100,107,4,0,107,3,0,119,100,110,107,100,2,11,106,5,1,111,10,1,4,58,9,1,111,100,106,16,11,4,0,9,11,111,100,106,2,0,111,169,170,169,3,11,169,170,171,172,3,11,4,17,4,11,3,0,107,222,100,106,4,0,111,171,172,169,170,171,172,10,11,107,6,0,222,100,106,100,107,2,0,3,11,2,17,111,170,11,11,6,0,222,6,1,6,11,172,3,11,7,0,2,11,107,2,11,2,0,111,11,11,3,0,3,11,7,0,4,11,3,0,111,6,11,169,170,171,107,111,4,0,110,3,0,198,100,198,4,0,110,2,0,111,169,111,6,11,171,2,11,170,111,4,0,110,2,0,103,3,0,103,3,0,110,2,0,111,171,111,6,11,107,170,171,172,111,5,1,117,8,1,117,3,1,111,169,111,2,11,169,172,169,2,11,172,169,170,8,11,6,0,6,11,171,111,2,11,171,111,171,2,11,170,171,172,7,11,2,0,107,2,0,107,100,3,11,4,0,111,2,0,198,111,169,170,171,172,169,170,171,172,169,170,171,172,2,0,106,4,1,106,4,0,198,100,167,111,199,2,0,5,11,171,2,11,3,17,2,11,2,0,106,4,0,106,6,0,168,111,3,1,4,11,3,17,6,11,3,1,4,17,8,1,111,255,32,11,14,11,2,0,118,2,0,2,11,4,0,169,6,11,111,7,0,3,11,5,0,119,5,0,198,2,0,171,172,170,4,11,111,9,0,110,100,198,100,106,3,1,6,0,107,169,170,5,11,111,100,103,5,0,107,100,110,3,0,106,3,11,4,1,106,2,1,171,172,5,11,111,2,1,106,101,2,17,6,1,106,101,7,11,106,2,11,169,2,11,171,3,11,3,11,106,9,11,106,4,0,110,3,0,106,5,11,169,2,11,169,3,11,106,2,0,7,11,106,4,0,110,100,103,100,106,8,11,171,3,11,106,2,0,169,170,171,172,3,11,2,1,3,17,5,1,5,11,171,2,11,169,3,11,3,1,2,11,169,170,13,11,171,4,11,169,3,11,8,11,171,172,13,11,169,2,11,171,5,11,4,0,4,11,169,3,11,169,4,11,2,0,110,2,0,4,11,169,5,11,2,0,198,100,110,2,11,169,171,172,169,170,107,4,11,167,100,110,100,198,100,118,110,111,171,2,11,171,2,11,199,3,0,110,5,11,171,6,11,168,100,110,3,0,119,110,111,169,2,11,169,2,11,5,1,5,11,169,6,11,8,1,111,171,2,11,171,2,11,10,11,171,3,11,2,0,10,11,169,2,11,169,2,11,2,11,5,0,3,11,169,111,5,0,12,11,171,2,11,111,7,0,2,11,4,0,163,164,4,0,2,11,2,0,2,11,100,110,4,0,14,0,165,166,11,0,110,3,0,197,27,0,110,107,3,0,27,17,5,1,255,4,11,106,27,11,4,11,106,16,11,171,172,9,11,4,0,106,100,7,11,169,170,171,172,169,170,171,172,169,170,171,172,169,170,171,172,169,170,111,100,163,164,100,106,3,0,111,5,0,111,169,12,11,170,171,172,111,100,165,166,100,106,100,118,100,110,100,118,198,2,0,111,171,4,11,5,0,3,11,172,169,170,111,4,0,106,100,119,100,110,100,119,3,0,111,169,2,11,4,0,3,67,100,2,11,170,171,172,111,14,1,111,171,2,11,3,0,103,3,68,100,111,107,172,169,170,111,15,11,169,2,11,106,7,1,3,11,171,107,111,7,11,7,0,111,171,2,11,106,10,11,169,2,11,3,11,5,0,198,5,0,111,169,2,11,106,3,11,3,0,4,11,171,2,11,2,11,12,0,111,171,2,11,106,111,3,0,198,3,0,2,11,169,2,11,2,11,5,0,6,1,106,111,169,2,11,106,8,0,2,11,171,2,11,2,11,3,1,106,101,6,11,106,111,171,2,11,106,100,198,100,4,1,5,0,197,5,11,106,7,11,106,111,169,2,11,106,13,0,5,11,106,111,2,0,4,11,106,111,171,2,11,4,1,4,17,6,1,4,11,100,106,5,0,2,11,106,111,169,16,11,3,11,2,0,106,5,0,2,11,106,170,171,172,169,170,171,172,169,170,2,11,3,0,4,11,2,0,110,198,100,106,5,0,2,11,106,8,11,172,111,5,0,3,11,199,100,110,2,0,106,2,11,107,100,3,11,106,8,0,110,3,0,198,100,118,2,0,111,6,1,7,11,106,8,0,110,5,0,119,2,0,111,13,11,117,7,1,4,17,6,1,111,255,32,11,100,111,7,0,160,100,163,164,100,160,7,0,6,11,107,100,2,11,100,110,2,0,198,4,0,160,100,165,166,100,160,2,0,198,7,0,2,11,4,0,111,199,110,7,0,160,4,0,160,10,0,111,5,0,111,9,1,6,17,5,1,106,3,1,100,111,198,100,2,67,100,111,20,11,106,3,11,100,111,2,0,2,68,100,111,2,11,7,0,110,5,0,5,11,106,111,3,0,111,4,1,100,111,4,0,167,4,0,110,100,198,100,118,3,0,3,11,106,111,6,0,118,100,198,111,103,3,0,168,4,0,110,3,0,119,4,0,2,11,106,111,6,0,119,2,0,111,101,100,106,3,1,110,8,1,106,4,0,106,111,9,1,111,2,0,106,3,11,169,8,11,106,4,0,106,11,11,107,100,106,3,11,171,8,11,6,1,11,11,3,1,3,11,169,6,11,170,18,11,4,11,169,170,171,172,169,170,171,172,111,172,110,100,103,100,110,100,103,100,110,100,103,169,170,5,11,4,11,171,6,11,170,111,170,12,11,172,169,170,171,172,111,4,11,169,6,11,172,111,172,12,11,170,171,172,169,170,111,2,11,6,0,3,11,170,171,170,110,100,103,100,110,100,103,100,110,100,103,111,172,2,11,171,2,11,100,110,118,2,0,198,100,118,110,160,17,11,160,110,2,0,197,100,110,119,100,107,2,0,119,110,160,17,0,160,110,3,0,9,1,160,17,0,160,4,1,9,11,19,17,4,11,255,32,11,111,13,0,111,2,0,111,11,0,111,2,0,111,3,0,105,167,105,167,105,167,105,100,118,100,110,2,0,110,100,118,100,105,167,105,167,105,167,105,100,110,100,197,111,3,0,104,168,104,168,104,168,104,100,119,100,110,2,0,110,100,119,100,104,168,104,168,104,168,104,100,110,2,0,111,15,1,106,15,1,16,11,106,15,11,111,13,0,111,100,106,111,13,0,222,100,198,100,105,167,105,167,105,167,105,100,118,100,110,100,106,110,100,118,100,105,167,105,167,105,167,105,100,198,100,222,3,0,104,168,104,168,104,168,104,100,119,100,110,100,106,110,100,119,100,104,168,104,168,104,168,104,3,0,222,14,1,106,15,1,111,15,11,106,16,11,111,13,0,111,106,100,111,13,0,222,100,198,100,105,167,105,167,105,167,105,100,118,100,110,106,100,110,100,118,100,105,167,105,167,105,167,105,100,198,100,222,3,0,104,168,104,168,104,168,104,100,119,100,110,106,100,110,100,119,100,104,168,104,168,104,168,104,3,0,222,15,1,106,14,1,111,16,11,106,15,11,111,13,0,111,100,106,111,13,0,222,100,198,100,105,167,105,167,105,167,105,100,118,100,110,100,106,110,100,118,100,105,167,105,167,105,167,105,100,198,100,222,3,0,104,168,104,168,104,168,104,100,119,100,110,100,106,110,100,119,100,104,168,104,168,104,168,104,3,0,222,30,1,111,32,11}

function CanDraw(x as ubyte, y as ubyte) as ubyte
	if y>20 or x>31 then return 0
	return 1
end function

sub DrawUI1(lives as ubyte, shield as ubyte, mapnumber as ubyte)
	flash 0
	localMapNumber=mapnumber
	dim i as ubyte = 14
	dim j as ubyte = 22
	paper 0
	Achievement()
	if achSFS = 2 then print at j,i; ink 5; "\B": i=i+2
	if achBB = 2 then print at j,i; ink 2; "\D": i=i+2
	
	print at j,30; ink 4; "\E"
	
	Environment()
	paper 0
	print at j,0; ink 6; "\G"
    print at j,3; ink 3; "\J"
	
	ink 7
	printat64(j,2)
	if lives<10 then 
		print64("0"+STR(lives))
	else
		print64(STR(lives))
	end if 
	printat64(j,8)
	if shield<10 then 
		print64("0"+STR(shield))
	else
		print64(STR(shield))
	end if 
	ink 7
	printat64(j,62): print64(STR(localMapNumber))
	
	if AlienDead=0 then 
		if brain=1 then 
			print at j,22; ink 7; "\D"
		end if 
		if mitosis=1 then 
			print at j,24; ink 3; "\I"
		end if 	
		if spit=1 then 
			print at j,26; ink 4; "\H"
		end if 					
		if showselector=1 then
			ClearAbilities(21)
			'LongWait()
			print at 21,20+selector*2; ink 5; "\P"
			'LongWait()
		end if 
		Achievement()
		print at j,20; ink 2; "\C"
		if symbiosis=1 then
			print at j,28; ink 7; "\R"
		end if 
	else
		'ClearAbilities(21)
		ClearAbilities(j)
	end if 	
end sub

sub ClearAbilities(y as ubyte)
	dim i as ubyte
	for i=20 to 28
		print at y,i; " "
	next
end sub 

function CanHit1(x1 as ubyte, y1 as ubyte, x2 as ubyte) as ubyte
	dim i as ubyte
	for i=x1 to x2
		itemp=map(y1,i)
		if itemp=11 or itemp=10 or itemp=1 then return 0
	next i
	return 1
end function

sub CopyLevels(mapNumber as ubyte)
	localMapNumber=mapNumber
	paper 0
	cls
	dim x as ubyte
	dim y as ubyte
	dim pos as ubyte
	x=0
	y=0
	dim mapcounter as ubyte = 1
	dim i as uinteger
	if cutscene=0 then print at 10,12; ink 4; "STAGE "+str(localMapNumber)
	dim value as ubyte
	for i=0 to ubound(vector,1)
		value = vector(i)
		if value=255 then mapcounter=mapcounter+1: goto skip
		if mapNumber=mapcounter then
			if value>99 and value<200 then
				map(y,x) = value-100
				x=x+1
				if x>31 then x = 0: y=y+1
				goto skip
			end if
			if value=222 then
				map(y,x) = 11
				x=x+1
				if y=20 and x=31 then exit for
				if x>31 then x = 0: y=y+1
				map(y,x) = 11
				x=x+1
				if y=20 and x=31 then exit for
				if x>31 then x = 0: y=y+1
				goto skip
			end if
			if value<100
				for pos=1 to value
					map(y,x) = vector(i+1)
					'if map(y,x) = 0 then
					''	if Int(rnd*7) = 5 then map(y,x) = 5
					'end if
					x=x+1
					if x>31 then x = 0: y=y+1
				next
				i=i+1
			end if
			:skip
			if y=20 and x=31 then exit for
		end if
	next

	dim temp as ubyte
	for x=0 to 31
		for y=0 to 20
			temp=map(y,x)
			if temp = 1 and y<20 then
				if map(y+1,x)=0 then
					temp=rnd*4
					if temp=0 then temp=55
					if temp=1 then temp=56
					if temp>4 then map(y+1,x)=temp
				end if 
			end if 
			if temp = 11
			 	if y<20 then
					if map(y+1,x)=0 then
						temp=rnd*5
						if temp=0 then temp=52
						if temp=1 then temp=53
						if temp=2 then temp=54
						if temp=3 then temp=55
						if temp=4 then temp=56
						map(y+1,x)=temp
					end if 
				end if 
				if x>0 then 
					if map(y,x-1)=0 then 
						temp=rnd*4
						if temp=0 then temp=28
						if temp=1 then temp=29
						if temp=2 then temp=30
						if temp=3 then temp=31
						map(y,x-1)=temp
					end if 
				end if 
				if x<32 then 
					if map(y,x+1)=0 then 
						temp=rnd*4
						if temp=0 then temp=25
						if temp=1 then temp=26
						if temp=2 then temp=27
						if temp=3 then temp=32
						map(y,x+1)=temp
					end if 
				end if 
			end if 
			'if temp = 5 and map(y,x+1) = 0 then map(y,x+1)=53
			'if y<20 then
			''	if temp = 11 and map(y+1,x) = 0 then 
			''		temp=rnd*6
			''		if temp=0 then temp=54
			''		if temp=1 then temp=55
			''		if temp=2 then temp=56
			''		if temp>53 then map(y+1,x)=temp
			''	end if 
			'end if 
		next
	next
	if cutscene=0 then print at 10,12; ink 4; "GET READY"
end sub

sub DrawLevel1(mapNumber as ubyte)
	CopyLevels(mapNumber)
end sub

sub RedrawArea1(x as ubyte, y as ubyte)
	if CanDraw(x,y)=0 then return
	bright 0
	dim paperv as ubyte
	paper 0
	paperv=0
	dim inkv as ubyte
	Environment()
	inkv=3
	sprite1="X"
    dim currentChar as ubyte = map(y,x)
	if currentChar = 1 then
		inkv=4: sprite1="\C" ' Floor
	end if
	if currentChar = 2 then
		inkv=2: paperv=7: sprite1="\T" ' Health
	end if
	if currentChar = 6 then
		inkv=5: sprite1="\F" ' Stairs
	end if
    if currentChar=7 then
        inkv=6: sprite1="\G" ' Life
    end if
    'if currentChar=8 then
    ''    inkv=2: sprite1="\H" ' Ammo
    'end if
	if currentChar=10 then
        inkv=7: sprite1="\A" ' Door
    end if
	if currentChar=11 then
        inkv=1: sprite1="\K" ' Flat
    end if
	if currentChar=12 then
		inkv=7: sprite1="\L" ' DeadRight1
	end if
	if currentChar=13 then
		inkv=7: sprite1="\M" ' DeadRight2
	end if
	if currentChar=14 then
		inkv=7: sprite1="\N" ' DeadLeft1
	end if
	if currentChar=15 then
		inkv=7: sprite1="\O" ' DeadLeft2
	end if
	if currentChar=17 then
		paperv=2: inkv=6: sprite1="\Q" ' Lava
	end if
	if currentChar=18 then
		paperv=5: inkv=7: sprite1="\R" ' Terminal
	end if
	if currentChar=19 then
		inkv=7: sprite1="\S" ' Terminal2
	end if
	if currentChar=20 then
		paperv=0: inkv=7: sprite1="\R" ' Inactive Terminal
	end if
	if currentChar=88 then
		inkv=7: sprite1="\I" ' Scull
	end if
	if currentChar=67 then
		inkv=5: sprite1="\B" ' capsule
	end if
	if currentChar=68 then
		inkv=5: sprite1="\E" ' capsule
	end if
	if currentChar = 0 or currentChar = 99 or currentChar = 77 then
		sprite1=" "
	end if
	if (currentChar > 51 and currentChar<73) and currentChar<>67 and currentChar<>68 or currentChar=3 then
		Environment3()
		inkv=1
		if currentChar = 52 then sprite1="\A"
		if currentChar = 53 then sprite1="\B"
		if currentChar = 54 then sprite1="\C"
		if currentChar = 55 then inkv=4: sprite1="\D"
		if currentChar = 56 then inkv=4: sprite1="\E"

		if currentChar = 57 then inkv=6: sprite1="\P" 'border
		if currentChar = 58 then inkv=6: sprite1="\O" 'border
		if currentChar = 59 then inkv=6: sprite1="\Q" 'border
		if currentChar = 60 then inkv=6: sprite1="\N" 'border
		if currentChar = 61 then inkv=6: sprite1="\R" 'border
		if currentChar = 62 then inkv=6: sprite1="\S" 'border

		if currentChar = 63 then inkv=6: sprite1="\J" 'radiation
		if currentChar = 64 then inkv=6: sprite1="\K" 
		if currentChar = 65 then inkv=6: sprite1="\L" 
		if currentChar = 66 then inkv=6: sprite1="\M" 

		if currentChar = 69 then inkv=1: sprite1="\F" 'back decor
		if currentChar = 70 then inkv=1: sprite1="\G" 'back decor
		if currentChar = 71 then inkv=1: sprite1="\H" 'back decor
		if currentChar = 72 then inkv=1: sprite1="\I" 'back decor

		if currentChar = 3 then inkv=7: sprite1="\T" 'switch
	end if
	if currentChar > 21 and currentChar < 33 then
		Environment2()
		if currentChar = 24 then inkv=2: sprite1="\C" ' Blood
		if currentChar = 25 then inkv=1: sprite1="\A" ' Walls decoration left
		if currentChar = 26 then inkv=1: sprite1="\B"
		if currentChar = 27 then inkv=4: sprite1="\H"
		if currentChar = 28 then inkv=1: sprite1="\I" ' Walls decoration right
		if currentChar = 29 then inkv=1: sprite1="\J"
		if currentChar = 30 then inkv=4: sprite1="\K"
		if currentChar = 31 then inkv=4: sprite1="\L"
		if currentChar = 32 then inkv=4: sprite1="\M"	
	end if 
	if currentChar=4 or currentChar=5 or currentChar=8 or currentChar=9 then
		Achievement()
		if currentChar = 4 then
			inkv=7: paperv=5: sprite1="\R" ' baby
		end if
		if currentChar = 5 then
			inkv=5: sprite1="\S" ' baby cover
		end if
		if currentChar = 8 then
			inkv=7: paperv=3: sprite1="\R" ' baby
		end if
		if currentChar = 9 then
			inkv=3: sprite1="\S" ' baby cover
		end if
	end if

	print at y,x; ink inkv; paper paperv; sprite1
end sub

function OnLava(x as ubyte,y as ubyte) as ubyte
	if map(y+2,x)=17 then return 1
	if map(y+1,x)=17 then return 2
	return 0
end function

function CanFall(x as ubyte,y as ubyte, alive as ubyte) as ubyte
	dim value as ubyte
	value = map(y+2,x)
	if alive = 1 then
		if value=0 or (value>1 and value<6) or (value>6 and value<11) or (value>17 and value<21) or (value>11 and value<16) or (value>51 and value<73) or (value>23 and value<33) then
			return 1
		else
			return 0
		end if
	else
		if value=0 or (value>1 and value<11) or (value>17 and value<21) or (value>11 and value<16) or value=24 or (value>51 and value<73) then
			return 1
		else
			return 0
		end if
	end if
end function

function CheckMovement1(value as ubyte) as ubyte
	if value=0 or (value>1 and value<10) or (value>11 and value<16) or value=99 or value=88 or (value>17 and value<33) or value=97 or (value>51 and value<73) then
		return 1
	end if 
	return 0
end function
function CheckMovement2(value as ubyte) as ubyte
	if value=0 or (value>1 and value<10) or (value>11 and value<16) or value=99 or (value>17 and value<33) or (value>51 and value<73) then
		return 1
	end if 
	return 0
end function

function CanMoveLeft(x as ubyte,y as ubyte) as ubyte
	if x=0 then return 0
	dim res as ubyte = 0
	dim value as ubyte
	value = map(y+1,x-1)
	res=CheckMovement1(value)
	value = map(y,x-1)
	if res = 1 then
		res=CheckMovement2(value)
	end if
	return res
end function

function CanMoveRight(x as ubyte,y as ubyte) as ubyte
	if x+1>31 then return 0
	dim res as ubyte 
	res = 0
	dim value as ubyte
	value = map(y+1,x+1)
	res=CheckMovement1(value)
	value = map(y,x+1)
	if res = 1 then
		res=CheckMovement2(value)
	end if
	return res
end function

function NPCCanMoveLeft1(x as ubyte,y as ubyte) as ubyte
	if x=0 then return 0
	dim value as ubyte
	value = map(y+1,x-1)
	dim value2 as ubyte
	value2 = map(y+2,x-1)
	if value=11 or value=99 then return 0
	if value2=1 or value2=6 or value2=11 then
		if value=0 or (value>1 and value<11) or value=19 then
			return 1
		else
			return 0
		end if
	else
		return 0
	end if
end function

function NPCCanMoveRight1(x as ubyte,y as ubyte) as ubyte
	if x+1>31 then return 0
	dim value as ubyte
	value = map(y+1,x+1)
	dim value2 as ubyte
	value2 = map(y+2,x+1)
	if value=11 or value=99 then return 0
	if value2=1 or value2=6 or value2=11 then
		if value=0 or (value>1 and value<11) or value=19 then
			return 1
		else
			return 0
		end if
	else
		return 0
	end if
end function

function CanMoveUpDown(x as ubyte,y as ubyte) as ubyte
	if map(y,x)=6 then
		return 1
	else
		return 0
	end if
end function

function PlayerTookItem1(x as ubyte,y as ubyte) as ubyte
	dim value as ubyte
	value = map(y,x)
	if value=7 then ReplaceLife(x,y): return 1
	if value=99 and mitosisactive=0 then return 99
    return 0
end function

sub RecoverEnvironment(x as ubyte, y as ubyte, value as ubyte)
	if map(y-1,x) = value then
		map(y,x)=value
	end if
	if map(y-1,x-1) = value then
		map(y,x-1)=value
	end if
	if map(y-1,x+1) = value then
		map(y,x+1)=value
	end if
	
	dim temp as ubyte
	temp = map(y-1,x)
	if temp = 18 or temp = 20 then
		map(y,x)=19
	end if
	temp = map(y-1,x-1)
	if temp = 18 or temp = 20 then
		map(y,x-1)=19
	end if
	temp = map(y-1,x+1)
	if temp = 18 or temp = 20 then
		map(y,x+1)=19
	end if
end sub 

function PlayerSearch1(x as ubyte, y as ubyte, llife as ubyte) as ubyte
	if x=0 then return 0
	if x=31 then return 0
	dim value as ubyte
	value = map(y,x)
	if value>11 and value<16 then
		ShowTakeMenu(llife)
		map(y,x)=0
		if map(y,x-1)>11 and map(y,x-1)<16 then map(y,x-1)=0
		if map(y,x+1)>11 and map(y,x+1)<16 then map(y,x+1)=0
		'Environment()
		RecoverEnvironment(x,y,6)
		RecoverEnvironment(x,y,4)		
		return 1
	end if
end function

function FASTCALL GetKeyScanCode AS UInteger
    asm
		PROC
		LOCAL END_KEY
		LOCAL LOOP

		ld l, 1
		ld a, l
	LOOP:
		cpl
		ld h, a
        in a, (0FEh)
        cpl
		and 1Fh
		jr nz, END_KEY

		ld a, l
		rla
		ld l, a
		jr nc, LOOP
		ld h, a
	END_KEY:
		ld l, a
		ENDP
    end asm
end function

sub ShowTakeMenu(lives as ubyte)
	if lives>0 then
		achTL = 1
		bright 1
		ink 6
		printat64(21,2): print64("+"+STR(lives))		
		bright 0
		Click()
	end if 
end sub

sub OpenDoor(x as ubyte, y as ubyte)
	if map(y,x)=0 then return
	map(y,x)=0
	if map(y+1,x)=10 then map(y+1,x)=0
	RedrawArea1(x,y)
	RedrawArea1(x,y+1)
	for x=0 to 5
		beep 0.003,-5+x
	next
end sub

sub CloseDoor(x as ubyte, y as ubyte)
	if map(y,x)=10 then return
	map(y,x)=10
	if map(y+1,x)=0 then map(y+1,x)=10
	RedrawArea1(x,y)
	RedrawArea1(x,y+1)
	if AlienX=x and (AlienY=y or AlienX=y+1) then AlienHP=0: AlienDead=1
	for x=0 to 5
		beep 0.003,5-x
	next	
end sub

sub SwitchAction(x as ubyte,y as ubyte, activate as ubyte)
	if localMapNumber=6 then 
		if (x=16 and y=5) or (x=12 and y=5) then
			if activate=1 then 
				OpenDoor(14,4)
			else
				CloseDoor(14,4)
			end if 
		end if 
		if x=18 and y=14 then
			if activate=1 then 
				OpenDoor(15,13)
			else
				CloseDoor(15,13)
			end if 
		end if 
		if x=22 and y=14 then
			if activate=1 then 
				OpenDoor(26,13)
			else
				CloseDoor(26,13)
			end if 
		end if 
	end if 
	if localMapNumber=7 then 
		if x=20 and y=7 then
			if activate=1 then 
				OpenDoor(18,6)
			else
				CloseDoor(18,6)
			end if 
		end if 
		if x=2 and y=4 then
			if activate=1 then 
				OpenDoor(19,12)
			else
				CloseDoor(19,12)
			end if 
		end if 
	end if 
	if localMapNumber=8 then 
		if x=21 and y=6 then
			if activate=1 then 
				OpenDoor(22,18)
			else
				CloseDoor(22,18)
			end if 
		end if 
	end if 
	if localMapNumber=9 then 
		if x=24 and y=13 then
			if activate=1 then 
				OpenDoor(22,16)
			else
				CloseDoor(22,16)
			end if 
		end if 
		if x=24 and y=16 then
			if activate=1 then 
				OpenDoor(22,13)
			else
				CloseDoor(22,13)
			end if 
		end if 
		if x=20 and y=13 then
			if activate=1 then 
				OpenDoor(18,16)
			else
				CloseDoor(18,16)
			end if 
		end if 
		if x=20 and y=16 then
			if activate=1 then 
				OpenDoor(18,13)
				OpenDoor(22,13)
			else
				CloseDoor(18,13)
				CloseDoor(22,13)
			end if 
		end if
		if x=16 and y=13 then
			if activate=1 then 
				OpenDoor(14,16)
			else
				CloseDoor(14,16)
			end if 
		end if 
		if x=16 and y=16 then
			if activate=1 then 
				OpenDoor(14,13)
				OpenDoor(18,13)
			else
				CloseDoor(14,13)
				CloseDoor(18,13)
			end if 
		end if 
		if x=0 and y=8 then
			if activate=1 then 
				OpenDoor(9,7)
			else
				CloseDoor(9,7)
			end if 
		end if 
	end if 
end sub

function TerminalActivated(x as ubyte,y as ubyte) as ubyte
	if map(y,x) <> 18 then return 0
	if localMapNumber=1 then 
		if x=16 and y=10 then
			OpenDoor(8,17)
		end if 
		if x=2 and y=17 then
			OpenDoor(1,17)
		end if 
	end if 
	if localMapNumber=2 then 
		if x=26 and y=17 then
			map(13,27)=72
			RedrawArea1(27,13)
			Click()
		end if 
		if x=24 and y=10 then
			OpenDoor(16,5)
		end if 
		if x=9 and y=16 then
			OpenDoor(10,16)
		end if 
	end if
	if localMapNumber=3 then 
		if x=17 and y=3 then
			OpenDoor(16,3)
		end if 
		if x=7 and y=18 then
			OpenDoor(8,18)
		end if 
	end if
	if localMapNumber=4 then 
		if x=6 and y=8 then
			map(4,10)=69
			RedrawArea1(10,4)
			Click()
		end if 
		if x=8 and y=3 then
			map(15,14)=1
			map(15,15)=1
			map(15,16)=1
			RedrawArea1(14,15)
			RedrawArea1(15,15)
			RedrawArea1(16,15)
			Click()
		end if 
		if x=28 and y=3 then
			OpenDoor(30,3)
		end if 
		if x=23 and y=9 then
			OpenDoor(24,16)
		end if
		if x=29 and y=9 then
			OpenDoor(25,16)
		end if
		if x=2 and y=18 then
			OpenDoor(1,18)
		end if
	end if
	if localMapNumber=5 then 
		if x=27 and y=18 then
			OpenDoor(28,18)
		end if 
		if x=15 and y=9 then
			OpenDoor(21,13)
		end if 
		if x=14 and y=5 then
			OpenDoor(25,2)
		end if 
		if x=3 and y=16 then
			OpenDoor(9,16)
			OpenDoor(1,4)
		end if 
	end if
	if localMapNumber=6 then 
		if x=27 and y=4 then
			OpenDoor(29,4)
		end if 
	end if
	if localMapNumber=7 then 
		if x=16 and y=1 then
			OpenDoor(10,3)
		end if 
		if x=23 and y=12 then
			OpenDoor(4,12)
		end if 
	end if
	if localMapNumber=8 then 
		if x=10 and y=4 then
			map(20,21)=1
			map(20,22)=1
			map(20,23)=1
			map(20,24)=1
			RedrawArea1(21,20)
			RedrawArea1(22,20)
			RedrawArea1(23,20)
			RedrawArea1(24,20)
			Click()
		end if 
		if x=28 and y=18 then
			OpenDoor(2,17)
			map(20,13)=1
			RedrawArea1(13,20)
		end if 
	end if
	if localMapNumber=9 then 
		if x=7 and y=17 then
			OpenDoor(6,9)
		end if 
		if x=28 and y=7 then
			OpenDoor(1,2)
			map(6,26)=0
		end if 
	end if
end function

sub Click()
	dim v as ubyte
	for v = 1 to 7
		beep 0.005,v
	next v
end sub

REM sub Click2()
	REM dim v as ubyte
	REM for v = 1 to 3
		REM beep 0.005,v
	REM next v
REM end sub

sub Shock()
	dim v as ubyte
	for v = 50 to 40 step -1
		beep 0.005,v
	next v
end sub

function GetChar1(x as ubyte, y as ubyte) as ubyte
	return map(y,x)
end function

sub AlienScream()
	dim v as ubyte
	for v = 50 to 45 step -1
		beep 0.003,v
		if v<47 then beep 0.004,5
	next v
end sub
sub HumanScream()
	dim v as ubyte
	for v = 30 to 25 step -1
		beep 0.003,v
		beep 0.002,5
	next v
end sub

sub HideSelector()
	showselector=0
	ClearAbilities(21)
end sub 